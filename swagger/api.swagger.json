{
  "swagger": "2.0",
  "info": {
    "title": "Product Service",
    "version": "1.0",
    "contact": {
      "name": "blueprint-roa-golang-grpc-gateway",
      "url": "http://localhost:3011",
      "email": "chat@robowealth.co.th"
    }
  },
  "tags": [
    {
      "name": "ProductService"
    },
    {
      "name": "CategoryService"
    },
    {
      "name": "WarehouseService"
    },
    {
      "name": "UsersService"
    },
    {
      "name": "StockService"
    },
    {
      "name": "MovieService"
    },
    {
      "name": "MovingService"
    },
    {
      "name": "DeltaService"
    },
    {
      "name": "AlphaService"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/alpha": {
      "post": {
        "operationId": "AlphaService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1AlphaCreateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "movieName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "time",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cinemaNo",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AlphaService"
        ]
      }
    },
    "/api/v1/alpha2": {
      "post": {
        "operationId": "AlphaService_Create2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1Alpha2CreateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "movieName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "time",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cinemaNo",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AlphaService"
        ]
      }
    },
    "/api/v1/category": {
      "post": {
        "operationId": "CategoryService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1CategoryCreateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api_v1CategoryCreateRequest"
            }
          }
        ],
        "tags": [
          "CategoryService"
        ]
      },
      "patch": {
        "operationId": "CategoryService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1CategoryUpdateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "detail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "nameUpdate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "detailUpdate",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CategoryService"
        ]
      }
    },
    "/api/v1/delta": {
      "post": {
        "operationId": "DeltaService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1DeltaCreateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "movieName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "time",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cinemaNo",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeltaService"
        ]
      }
    },
    "/api/v1/delta2": {
      "post": {
        "operationId": "DeltaService_Create2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1Delta2CreateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "movieName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "time",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cinemaNo",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeltaService"
        ]
      }
    },
    "/api/v1/movie": {
      "get": {
        "operationId": "MovieService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1MovieGetResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "movieName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "time",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cinemaNo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "MovieService"
        ]
      },
      "delete": {
        "operationId": "MovieService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1MovieDeleteResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "MovieService"
        ]
      },
      "post": {
        "operationId": "MovieService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1MovieCreateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api_v1MovieCreateRequest"
            }
          }
        ],
        "tags": [
          "MovieService"
        ]
      },
      "patch": {
        "operationId": "MovieService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1MovieUpdateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "movieName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "time",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cinemaNo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dateUpdate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeUpdate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cinemaNoUpdate",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MovieService"
        ]
      }
    },
    "/api/v1/movie/list": {
      "get": {
        "operationId": "MovieService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1MovieListResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "movieName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "time",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cinemaNo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "MovieService"
        ]
      }
    },
    "/api/v1/moving": {
      "post": {
        "operationId": "MovingService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1MovingCreateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "movieName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "time",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cinemaNo",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MovingService"
        ]
      }
    },
    "/api/v1/product": {
      "post": {
        "operationId": "ProductService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1CreateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api_v1CreateRequest"
            }
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/api/v1/stock": {
      "get": {
        "operationId": "StockService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1StockGetResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "detail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "StockService"
        ]
      },
      "delete": {
        "operationId": "StockService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1StockDeleteResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "StockService"
        ]
      },
      "post": {
        "operationId": "StockService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1StockCreateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api_v1StockCreateRequest"
            }
          }
        ],
        "tags": [
          "StockService"
        ]
      },
      "patch": {
        "operationId": "StockService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1StockUpdateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "detail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "qty",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "qtyUpdate",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "StockService"
        ]
      }
    },
    "/api/v1/stock/list": {
      "get": {
        "operationId": "StockService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1StockListResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "detail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "StockService"
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "operationId": "UsersService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1UsersGetResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "fullName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "UsersService"
        ]
      },
      "post": {
        "operationId": "UsersService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1UsersCreateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api_v1UsersCreateRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/api/v1/users/list": {
      "get": {
        "operationId": "UsersService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1UsersListResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "fullName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gender",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/api/v1/warehouse": {
      "delete": {
        "operationId": "WarehouseService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1WarehouseDeleteResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "detail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "WarehouseService"
        ]
      },
      "post": {
        "operationId": "WarehouseService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_v1WarehouseCreateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api_v1WarehouseCreateRequest"
            }
          }
        ],
        "tags": [
          "WarehouseService"
        ]
      }
    }
  },
  "definitions": {
    "api_v1Alpha2CreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1AlphaCreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1CategoryCreateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        },
        "detail": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        }
      }
    },
    "api_v1CategoryCreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1CategoryUpdateResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1CreateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        },
        "detail": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        },
        "brand": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        },
        "price": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        }
      }
    },
    "api_v1CreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1Delta2CreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1DeltaCreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1MovieCreateRequest": {
      "type": "object",
      "properties": {
        "movieName": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        },
        "date": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        },
        "time": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        },
        "cinemaNo": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        }
      }
    },
    "api_v1MovieCreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1MovieDeleteResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1MovieGetResponse": {
      "type": "object",
      "properties": {
        "movieName": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "time": {
          "type": "string"
        },
        "cinemaNo": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1MovieListItem": {
      "type": "object",
      "properties": {
        "movieName": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "time": {
          "type": "string"
        },
        "cinemaNo": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1MovieListResponse": {
      "type": "object",
      "properties": {
        "item": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_v1MovieListItem"
          }
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "total": {
          "type": "string",
          "format": "int64"
        },
        "totalPages": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "api_v1MovieUpdateResponse": {
      "type": "object",
      "properties": {
        "movieName": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "time": {
          "type": "string"
        },
        "cinemaNo": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1MovingCreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1StockCreateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        },
        "detail": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        },
        "qty": {
          "type": "integer",
          "format": "int32",
          "title": "@inject_tag: validate:\"required\""
        }
      }
    },
    "api_v1StockCreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1StockDeleteResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "qty": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1StockGetResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "qty": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1StockListItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "qty": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1StockListResponse": {
      "type": "object",
      "properties": {
        "item": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_v1StockListItem"
          }
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "total": {
          "type": "string",
          "format": "int64"
        },
        "totalPages": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "api_v1StockUpdateResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "qty": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1UserListItem": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1UsersCreateRequest": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        },
        "lastName": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        },
        "address": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        },
        "gender": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        }
      }
    },
    "api_v1UsersCreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1UsersGetResponse": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1UsersListResponse": {
      "type": "object",
      "properties": {
        "item": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_v1UserListItem"
          }
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "total": {
          "type": "string",
          "format": "int64"
        },
        "totalPages": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "api_v1WarehouseCreateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        },
        "detail": {
          "type": "string",
          "title": "@inject_tag: validate:\"required\""
        }
      }
    },
    "api_v1WarehouseCreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "api_v1WarehouseDeleteResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
