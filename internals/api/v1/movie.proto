syntax = "proto3";

package api_v1;
import "google/api/annotations.proto";
import "protocGenSwagger/options/annotations.proto";



option go_package = "/.;api_v1";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "Movie Service"
    version: "1.0"
    contact: {
      name: "blueprint-roa-golang-grpc-gateway"
      url: "http://localhost:3011"
      email: "chat@robowealth.co.th"
    }
  }
  schemes: HTTP
  consumes: "application/json"
  produces: "application/json"
  responses: {
    key: "404"
    value: {
      description: "Returned when the resource does not exist."
      schema: {
        json_schema: {
          type: STRING
        }
      }
    }
  }
};

message Movie {
  string movieName = 1;
  string date = 2;
  string time = 3;
  string cinemaNo = 4;
  int64 created_at = 6;
  int64 updated_at = 7;
  string created_by = 8;
  string updated_by = 9;
}

message MovieCreateRequest {
  // @inject_tag: validate:"required"
  string movieName = 1;
  // @inject_tag: validate:"required"
  string date = 2;
  // @inject_tag: validate:"required"
  string time = 3;
  // @inject_tag: validate:"required"
  string cinemaNo = 4;
  // @inject_tag: validate:"required"

}

message MovieCreateResponse{
  int32 id = 1;
}

message MovieGetRequest {
  string movieName = 1;
  string date = 2;
  string time = 3;
  string cinemaNo = 4;
  int32  id = 5;
}

message MovieGetResponse{
  string movieName = 1;
  string date = 2;
  string time = 3;
  string cinemaNo = 4;
  int32 id = 5;
}

message MovieDeleteRequest {
  int32  id = 1;
}

message MovieDeleteResponse{
  int32 id = 1;
}

message MovieUpdateRequest {
  string movieName = 1;
  string date = 2;
  string time = 3;
  string cinemaNo = 4;
  int32 id = 5;
  string dateUpdate = 6;
  string timeUpdate = 7;
  string cinemaNoUpdate = 8;
}

message MovieUpdateResponse{
  string movieName = 1;
  string date = 2;
  string time = 3;
  string cinemaNo = 4;
  int32 id = 5;
}

message MovieListRequest {
  string movieName = 1;
  string date = 2;
  string time = 3;
  string cinemaNo = 4;
  int64 page = 5;
  int64 per_page = 6;
}

message MovieListResponse{
  repeated MovieListItem item = 1;
  int64 size = 2;
  int64 total = 3;
  int64 total_pages = 4;
}
message MovieListItem {
  string movieName = 1;
  string date = 2;
  string time = 3;
  string cinemaNo = 4;
  int32 id = 5;
}

service MovieService {
  rpc Create(MovieCreateRequest) returns (MovieCreateResponse) {
    option (google.api.http) = {
      post: "/api/v1/movie"
      body: "*",
    };
  }
  rpc Get(MovieGetRequest) returns (MovieGetResponse) {
    option (google.api.http) = {
      get: "/api/v1/movie"
    };
  }
  rpc Delete(MovieDeleteRequest) returns (MovieDeleteResponse) {
    option (google.api.http) = {
      delete: "/api/v1/movie"
    };
  }
  rpc Update(MovieUpdateRequest) returns (MovieUpdateResponse) {
    option (google.api.http) = {
      patch: "/api/v1/movie"
    };
  }
  rpc List(MovieListRequest) returns (MovieListResponse) {
    option (google.api.http) = {
      get: "/api/v1/movie/list"
    };
  }
}