syntax = "proto3";

package api_v1;
import "google/api/annotations.proto";
import "protocGenSwagger/options/annotations.proto";



option go_package = "/.;api_v1";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "Stock Service"
    version: "1.0"
    contact: {
      name: "blueprint-roa-golang-grpc-gateway"
      url: "http://localhost:3001"
      email: "chat@robowealth.co.th"
    }
  }
  schemes: HTTP
  consumes: "application/json"
  produces: "application/json"
  responses: {
    key: "404"
    value: {
      description: "Returned when the resource does not exist."
      schema: {
        json_schema: {
          type: STRING
        }
      }
    }
  }
};

message Stock {
  string name = 1;
  string detail = 2;
  int32 qty = 3;
  int64 created_at = 6;
  int64 updated_at = 7;
  string created_by = 8;
  string updated_by = 9;
}

message StockCreateRequest {
  // @inject_tag: validate:"required"
  string name = 1;
  // @inject_tag: validate:"required"
  string detail = 2;
  // @inject_tag: validate:"required"
  int32 qty = 3;
  // @inject_tag: validate:"required"
}

message StockCreateResponse{
  int32 id = 1;
}

message StockGetRequest {
  string name = 1;
  string detail = 2;
  int32  id = 3;
}

message StockGetResponse{
  string name = 1;
  string detail = 2;
  int32 qty = 3;
  int32 id = 4;
}

message StockDeleteRequest {
  int32  id = 3;
}

message StockDeleteResponse{
  string name = 1;
  string detail = 2;
  int32 qty = 3;
  int32 id = 4;
}

message StockUpdateRequest {
  string name = 1;
  string detail = 2;
  int32 qty = 3;
  int32 id = 4;
  int32 qtyUpdate = 5;
}

message StockUpdateResponse{
  string name = 1;
  string detail = 2;
  int32 qty = 3;
  int32 id = 4;
}

message StockListRequest {
  string name = 1;
  string detail = 2;
  int64 page = 3;
  int64 per_page = 4;
}

message StockListResponse{
  repeated StockListItem item = 1;
  int64 size = 2;
  int64 total = 3;
  int64 total_pages = 4;
}
message StockListItem {
  string name = 1;
  string detail = 3;
  int32 qty = 4;
  int32 id = 5;
}

service StockService {
  rpc Create(StockCreateRequest) returns (StockCreateResponse) {
    option (google.api.http) = {
      post: "/api/v1/stock"
      body: "*",
    };
  }
  rpc Get(StockGetRequest) returns (StockGetResponse) {
    option (google.api.http) = {
      get: "/api/v1/stock"
    };
  }
  rpc Delete(StockDeleteRequest) returns (StockDeleteResponse) {
    option (google.api.http) = {
      delete: "/api/v1/stock"
    };
  }
  rpc Update(StockUpdateRequest) returns (StockUpdateResponse) {
    option (google.api.http) = {
      patch: "/api/v1/stock"
    };
  }
  rpc List(StockListRequest) returns (StockListResponse) {
    option (google.api.http) = {
      get: "/api/v1/stock/list"
    };
  }
}