syntax = "proto3";

package api_v1;
import "google/api/annotations.proto";
import "protocGenSwagger/options/annotations.proto";



option go_package = "/.;api_v1";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "Alpha Service"
    version: "1.0"
    contact: {
      name: "blueprint-roa-golang-grpc-gateway"
      url: "http://localhost:3011"
      email: "chat@robowealth.co.th"
    }
  }
  schemes: HTTP
  consumes: "application/json"
  produces: "application/json"
  responses: {
    key: "404"
    value: {
      description: "Returned when the resource does not exist."
      schema: {
        json_schema: {
          type: STRING
        }
      }
    }
  }
};

message Alpha {
  string movieName = 1;
  string date = 2;
  string time = 3;
  string cinemaNo = 4;
  int64 created_at = 6;
  int64 updated_at = 7;
  string created_by = 8;
  string updated_by = 9;
}

message AlphaCreateRequest {
  string movieName = 1;
  string date = 2;
  string time = 3;
  string cinemaNo = 4;

}

message AlphaCreateResponse{
  int32 id = 1;
}

message Alpha2CreateRequest {
  string movieName = 1;
  string date = 2;
  string time = 3;
  string cinemaNo = 4;

}

message Alpha2CreateResponse{
  int32 id = 1;
}


service AlphaService {
  rpc Create(AlphaCreateRequest) returns (AlphaCreateResponse) {
    option (google.api.http) = {
      post: "/api/v1/alpha"
    };
  }
  rpc Create2(Alpha2CreateRequest) returns (Alpha2CreateResponse) {
    option (google.api.http) = {
      post: "/api/v1/alpha2"
    };
  }
}

